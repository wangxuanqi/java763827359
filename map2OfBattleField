package battlefiled;

public class map {
	public char [][]map;
	public int m;
	public int n;
	//public List<hero> heros = new ArrayList<hero>();
	public map()
	{		
		m = 0;
		n = 0;
	}
	public map(int a,int b)
	{
		int i,j;
		m = a;
		n = b;
		map = new char[m][n];
		map[0][0] = '*';
		map[0][n-1] = '*';
		map[m-1][0] = '*';
		map[m-1][n-1] = '*';
		for(i = 1;i < m-1;i++)
		{
			map[i][0] = '|';
			map[i][n-1] = '|';
		}
		for(j = 1;j < n-1;j++)
		{
			map[0][j] = '-';
			map[m-1][j] = '-';
		}
		for(i = 1;i < m-1;i++)
			for(j = 1;j < n-1;j++)
				map[i][j] = ' ';
		for(i = m/4;i <= m/2;i++)
		{
			map[i][m/4] = '*';
			map[m/4][i] = '*';
		}
		for(i = 3*m/4;i >= m/2;i--)
		{
			map[i][3*m/4] = '*';
			map[3*m/4][i] = '*';
		}
		
	}
	public map(map map1)
	{
		this.m = map1.m;
		this.n = map1.n;
		map = new char[m][n];
		for(int i = 0;i < m;i++)
			for(int j = 0;j < n;j++)
				this.map[i][j] = map1.map[i][j];
		
	}
	public void setHero(longHero r1[],int n1,closedHero r2[],int n2)
	{
		int i = 0;
		for(i = 0;i < n1;i++)
		{
			map[r1[i].xSeat][r1[i].ySeat] = (char)('A'+i);
		}
		for(i = 0;i < n2;i++)
		{
			//String str=String.valueOf(i);
			map[r2[i].xSeat][r2[i].ySeat] = (char)('a'+i);
		}
	}
	public void Remove(String str,int distance,closedHero r)
	{
		if(str.equals("left"))
		{
			map[r.xSeat][r.ySeat-distance] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.ySeat -= distance;
		}
		else if(str.equals("right"))
		{
			map[r.xSeat][r.ySeat+distance] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.ySeat += distance;
		}
		else if(str.equals("up"))
		{
			System.out.println(4343);
			map[r.xSeat-distance][r.ySeat] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.xSeat -= distance;
		}
		else if(str.equals("down"))
		{
			
			map[r.xSeat+distance][r.ySeat] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.xSeat += distance;

		}
	}
	public void Remove(String str,int distance,longHero r)
	{
		//System.out.println(map[r.xSeat][r.ySeat]);
		
		if(str.equals("left"))
		{
			map[r.xSeat][r.ySeat-distance] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.ySeat -= distance;
		}
		else if(str.equals("right"))
		{
			map[r.xSeat][r.ySeat+distance] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.ySeat += distance;
		}
		else if(str.equals("up"))
		{
			map[r.xSeat-distance][r.ySeat] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.xSeat -= distance;
		}
		else if(str.equals("down"))
		{
			
			map[r.xSeat+distance][r.ySeat] = map[r.xSeat][r.ySeat];
			map[r.xSeat][r.ySeat] = ' ';
			r.xSeat += distance;
		}
//		for(int i = 0;i < m;i++)
//		{
//			for(int j = 0;j < n;j++)
//				System.out.print(map[i][j]);
//			System.out.println();
//		}
	}
	public void print()
	{
		for(int i = 0;i < m;i++)
		{
			for(int j = 0;j < n;j++)
				System.out.print(map[i][j]);
			System.out.println();
		}
	}
}
